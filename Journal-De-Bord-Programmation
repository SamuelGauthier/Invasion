----------------------------------
JOURNAL DE BORD : Programmation
----------------------------------


===========
04.09.2011
===========

- Première fenêtre OpenGL créée avec succès
- Affichage de quelques formes géométriques

===========
06.09.2011
===========

- The Aslan m'a passé une heightmap en format .bmp et une maison .obj que je vais essayer d'intégrer dans le projet
- J'ai réussi à créé un loader .BMP
- Réussi à créer une caméra freefly
- J'ai essayer de charger la map que The Aslan m'a passé, mais seulement une moitié et affichée

===========
07.09.2011
===========

- J'ai trouvé le problème. Mon loader .BMP ne prenait pas en compte les padding bytes
- Affichage du terrain avec succès

===========
10.09.2011
===========

- J'ai fini le loader .obj
- Création d'un compte sur GitHub
- Essayer de charger l'.obj que The Aslan m'a donné, mais sans succès. La texture est mal placée.
- Charge avec succès un modèle que je crée moi-même. Le problème vient du côté de The Aslan.

===========
17.09.2011
===========

- The Aslan m'a repassé un .obj corrigé. Le chargement se fait avec succès
- Application d'une texture que The Aslan m'a donnée sur le terrain

===========
18.09.2011
===========

- Implémentation d'un ramasse-miettes ( garbage collector ) très basique

===========
24.09.2011
===========

- Création d'un loader de fichier targa (.tga)

===========
25.09.2011
===========

- Création d'un utilitaire d'écriture de texte à peu près fonctionnel

===========
26.09.2011
===========

- Le texte est parfaitement affiché avec les effets de transparence. Prochaine étape : la génération d'un terrain aléatoire
- J'ai réussi à créer une première montagne par interpolation cosinus.

===========
28.09.2011
===========

- J'ai généré le terrain, mais les montagnes sont trop parfaites à mon goût, il faut que j'essaye d'interpoler les points d'une autre façon 

===========
29.09.2011
===========

- J'ai réussi à mettre un peu de lumière

===========
10.11.2011
===========

- J'ai codé un loader md2. C'est rapide mais les mouvements sont trop peu précis.

===========
18.11.2011
===========

- J'ai codé une console version alpha.

===========
20.11.2011
===========

- La console est fonctionnelle

===========
05.01.2012
===========

- Grand trou car j'ai décidé de réécrire tout le code car ça devenait ingérable. Le code est maintenant est plus
  "modulaire". En gros, il y a cinq modules:

      - Base : le fourre-tout mais le plus important. C'est le module qui s'occupe d'intéragir avec le gestionnaire de
               fenêtre et la libraire graphique ( OpenGL dans le cas présent ).
      - Geom : Tout ce qui est relatif au chargement des modèles 3d et leur manipulation
      - Math : Boîtes à outils de fonctions mathématiques. Pour l'instant vecteurs, quaternions et orientation de la 
               caméra.
      - Talk : Module qui s'occupe de l'interaction entre l'utilisateur et l'éditeur invEditor et également des données
               envoyés par les différents périphériques ( souris, clavier ).
      - Tex  : Pour l'instant ce module fournit quelques fonctions pour le chargement et la manipulation des textures. Il
               offre également les fonctions pour afficher du texte.
  C'était dur mais ça valait la peine. La programmation est beaucoup plus efficace quand le code est organisé logiquement.

===========
20.01.2012
===========

- Programmation d'un petit test pour afficher des ombres grâce à la méthode du static lightmapping mais c'est horrible.
  Les ombres ressemblent à des gros pixels. Pour l'instant on va se contenter sans les ombres

===========
28.01.2012
===========

- Mis en place d'un système de picking grâce au color matching

===========
16.02.2012
===========

- Maitenant on peut contrôler les personnages grâce à la souris.